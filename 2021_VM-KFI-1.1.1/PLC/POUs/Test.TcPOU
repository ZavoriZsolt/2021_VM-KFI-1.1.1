<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test" Id="{a7f529f9-6639-4ddc-83fe-1d6592c310d9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Test
VAR
	fbExecuter	:	NT_StartProcess;
	bTrig		: BOOL;
END_VAR
VAR
	sImageTestPath	: T_MaxString := 'C:\Test\felfogasi_terv\M1 K.PNG';
END_VAR
VAR
	fbCommandLine	: FB_CommandLineExecuter;
	bCommandLineTrig : BOOL;
	bMoveFileTrig	: BOOL;
	sSourceFIle		: STRING := 'C:\Test\asd.png';
	sTargetFile		: STRING := 'C:\Test\testerino\asd.png';
END_VAR
VAR
	fbEnum			: FB_EnumFindFileEntry;
	sFilePath		: T_MaxString := 'C:\Test\testerino\asd.png';
    bFileCheckTrig 	: BOOL;
    nFileCheckState	: UDINT;
	bFileFound		: BOOL;
END_VAR
VAR
	fbViseMySqlSpTest		: FB_SQL;
	bDbInit					: BOOL := FALSE;
	sName					: STRING := 'SmartFactory';
	nDBID					: UINT := 1;
	tTimeout				: TIME := T#10s;
	bGetNextVase			: BOOL := FALSE;

	sProcedureName			: STRING := 'spGetNextVise';				//Store Procedure name
    aParaInfo				: ARRAY [0..1] OF ST_SQLSPParameter;		//Parameter Info Array
	nCncNumber				: BYTE;										//Parameter in
	nViseNumber				: BYTE;										//Parameter out
END_VAR
//VAR
//	nSqlState			: INT := 0;
//	aSpParaList			: ARRAY [0..1] OF ST_DBParameter;
//	fbSpNextVise		: FB_DBStoredProcedures;
//	bGetNextVase		: BOOL := FALSE;
//	bSqlError			: BOOL;
	
//	nCncNumber			: BYTE;										//Parameter in
//	nViseNumber			: BYTE;										//Parameter out
//END_VAR
var
	_test_usint : USINT;
	_test : bool;
	fbCmdExecute			: Tc2_Utilities.NT_StartProcess;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbCmdExecute(
	NETID:= '', 
	PATHSTR:= 'C:\Users\Administrator\AppData\Local\Programs\Python\Python312\python.exe', 
	DIRNAME:= 'C:\Python_Test', 
	COMNDLINE:= 'cmd_test.py', 
	START:= , 
	TMOUT:= , 
	BUSY=> , 
	ERR=> , 
	ERRID=> );
_test_usint.0 := 1;
_test := _test_usint.0;
//CASE nSqlState OF
//	0:
//			IF bGetNextVase THEN
//				nSqlState := nSqlState + 20;
//			END_IF

//	20:	
//			SqlInitSpPara();
//			fbSpNextVise(bExecute:= FALSE);
//			IF bStepMode AND bStepP OR NOT bStepMode THEN
//				nSqlState := nSqlState + 20;
//			END_IF

//	40:
//			fbSpNextVise(bExecute:= TRUE);
//			IF NOT fbSpNextVise.bBusy THEN
//				fbSpNextVise(bExecute:= FALSE);
//				bGetNextVase := FALSE;
//				IF NOT fbSpNextVise.bError THEN
//					nSqlState := nSqlState + 20;
//				ELSE
//					bSqlError := TRUE;
//					nSqlState := 0;
//				END_IF
//			END_IF	
//END_CASE
//fbSpNextVise(
//	sNetID:= , 
//	hDBID:= 1, 
//	sProcedureName:= 'spGetNextVise', 
//	pParameterList:= ADR(aSpParaList), 
//	cbParameterList:= SIZEOF(aSpParaList), 
//	tTimeout:= T#5S);


fbViseMySqlSpTest();
IF NOT bDbInit THEN
	IF fbViseMySqlSpTest.Init(sName, nDBID, tTimeout) THEN
		bDbInit := TRUE;
	END_IF
END_IF

// Stored procedure parameters
aParaInfo[0].sParameterName     := 'CncNumber'; 
aParaInfo[0].eParameterType     := E_SPParameterType.Input;
aParaInfo[0].eParameterDataType := E_ColumnType.TinyInt;
aParaInfo[0].nParameterSize     := SIZEOF(nCncNumber);

aParaInfo[1].sParameterName     := 'ViseNumber'; 
aParaInfo[1].eParameterType     := E_SPParameterType.Input;
aParaInfo[1].eParameterDataType := E_ColumnType.TinyInt;
aParaInfo[1].nParameterSize     := SIZEOF(nCncNumber);

IF bGetNextVase THEN
	IF fbViseMySqlSpTest.StoredProcedure(sProcedureName,
										ADR(aParaInfo), SIZEOF(aParaInfo),
										ADR(nCncNumber), SIZEOF(nCncNumber),
										ADR(nViseNumber), SIZEOF(nViseNumber)) THEN
		bGetNextVase := FALSE;
	END_IF
END_IF

IF bTrig THEN
	fbExecuter(START := TRUE);
	fbExecuter(START := FALSE);
	bTrig := FALSE;
END_IF

fbExecuter(
	NETID:= '', 
	PATHSTR:= 'C:\Windows\System32\cmd.exe', 
	DIRNAME:= 'C:\Windows\System32',
	COMNDLINE:= '/C echo deez nuts && pause', 
	TMOUT:= T#10S, );
	
IF bCommandLineTrig AND_THEN fbCommandLine.ExecuteCommand('/C echo deez nuts && pause') = E_Executer_State.Done THEN
	bCommandLineTrig := FALSE;
END_IF

IF bMoveFileTrig THEN
	IF fbCommandLine.MoveFile(sSourceFIle , sTargetFile) = E_Executer_State.Done THEN
		bMoveFileTrig := FALSE;
	ELSIF fbCommandLine.MoveFile(sSourceFIle , sTargetFile) = E_Executer_State.Error THEN
		bMoveFileTrig := FALSE;
	END_IF
END_IF


CASE nFileCheckState OF 
	0:
		IF bFileCheckTrig THEN
			bFileFound := FALSE;
			bFileCheckTrig := FALSE;
			fbEnum.sPathName := sFilePath;
			fbEnum.eCmd := E_EnumCmdType.eEnumCmd_First;
			nFileCheckState := nFileCheckState + 20;		
		END_IF
		
	20:
		fbEnum( bExecute := FALSE );
        fbEnum( bExecute := TRUE );
		nFileCheckState := nFileCheckState + 20;	
		
	40:
		fbEnum( bExecute := FALSE );
        IF NOT fbEnum.bBusy THEN
            IF NOT fbEnum.bError THEN
                IF NOT fbEnum.bEOE THEN
                   	nFileCheckState	:= 0;
					bFileFound := TRUE;
                ELSE (* no more entries *)
                    ;
                END_IF
            ELSE (* log error *)
                ;
            END_IF
        END_IF
END_CASE

//IF i_bTest_Up OR i_bTest_Down THEN
//	q_bConveyor_1 := TRUE;
//END_IF
//IF i_bTest_Stop THEN
//	q_bConveyor_1 := FALSE;
//	q_bConveyor_2 := q_bConveyor_1;
//	q_bConveyor_3 := q_bConveyor_1;
//	q_bConveyor_4 := q_bConveyor_1;
//	q_bConveyor_5 := q_bConveyor_1;
//	q_bConveyor_6 := q_bConveyor_1;
//	q_bConveyor_7 := q_bConveyor_1;
//	q_bConveyor_8 := q_bConveyor_1;
//	q_bConveyor_9 := q_bConveyor_1;
//	q_bConveyor_10 := q_bConveyor_1;
//	q_bConveyor_11 := q_bConveyor_1;
//END_IF

//q_bConveyor_2 := q_bConveyor_1;
//q_bConveyor_3 := q_bConveyor_1;
//q_bConveyor_4 := q_bConveyor_1;
//q_bConveyor_5 := q_bConveyor_1;
//q_bConveyor_6 := q_bConveyor_1;
//q_bConveyor_7 := q_bConveyor_1;
//q_bConveyor_8 := q_bConveyor_1;
//q_bConveyor_9 := q_bConveyor_1;
//q_bConveyor_10 := q_bConveyor_1;
//q_bConveyor_11 := q_bConveyor_1;
]]></ST>
    </Implementation>
    <Action Name="SqlInitSpPara" Id="{d521c26e-15d1-436b-be7c-e9be3715b6df}">
      <Implementation>
        <ST><![CDATA[//aSpParaList[0].sParameterName    := 'CncNumber';
//aSpParaList[0].eParameterDataType:= Tc2_Database.eDBColumn_TinyInt;
//aSpParaList[0].eParameterType    := Tc2_Database.eDBParameter_Input;
//aSpParaList[0].cbParameterValue  := SIZEOF(nCncNumber);
//aSpParaList[0].pParameterValue   := ADR(nCncNumber);

//aSpParaList[1].sParameterName    := 'ViseNumber';
//aSpParaList[1].eParameterDataType:= Tc2_Database.eDBColumn_TinyInt;
//aSpParaList[1].eParameterType    := Tc2_Database.eDBParameter_Output;
//aSpParaList[1].cbParameterValue  := SIZEOF(nViseNumber);
//aSpParaList[1].pParameterValue   := ADR(nViseNumber);]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>