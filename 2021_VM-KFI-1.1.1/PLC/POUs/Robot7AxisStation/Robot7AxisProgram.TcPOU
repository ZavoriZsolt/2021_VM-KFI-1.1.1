<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Robot7AxisProgram" Id="{173dc762-8603-41d5-83ed-b826c20223c0}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Robot7AxisProgram
VAR	(* Control *)
	nState						: UDINT;
	nStatePrevious				: UDINT;
	sState						: STRING(500);
	bError						: BOOL;
	fbCycleTime					: TON;
	nCycleTime					: REAL;
END_VAR
VAR //LastStates
	anLastStates				:ARRAY[0..500] OF UDINT;
    iLastStates					:INT;
END_VAR
VAR (* Robot *)
	fbRobot						: FB_Fanuc_CNC;
	arRobotEvents				: ARRAY [0..15] OF TcEventEntry;
END_VAR
VAR (* Test variables *)
	nOverride					: BYTE := 10;
	bTestEnable					: BOOL;
	nTestIndex					: BYTE;
	nTestCncIndex				: BYTE;
	bCamTest					: BOOL;
	rtCamReset					: R_TRIG;
	nProgNr						: UINT;
	nDimX						: LREAL;
	nDimY						: LREAL;
	nDimZ						: LREAL;
	nPosX						: LREAL;
	nPosY						: LREAL;
	nWeight						: UINT;
	nTorque						: REAL;
	nErrorId					: UDINT;
	ePath						: E_CNC_Robot_Path;
END_VAR
VAR	(*Communication with CNC-s*)
	bStartCNC1					:	BOOL;
	bStartCNC2					:	BOOL;
	bStartCNC3					:	BOOL;
	nPlaceBackFromThisCNC		:	BYTE;
END_VAR
VAR // MySQL
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[MySQL();
Camera();
rtCamReset(CLK:= bCamTest);

IF rtCamReset.Q THEN
		fb3DCam.ResetCam();
END_IF
IF bCamTest THEN
	IF fb3DCam.CamCheck(nProgNr, nDimX, nDimY, nDimZ, nErrorId) THEN
		bCamTest := FALSE;
	END_IF
END_IF

(*Error handling*)
IF nState > 0 AND nState < 150000 THEN
	nStatePrevious := nState;
END_IF

(*Maintance*)
IF bManualMode THEN
	nState := 150000;
END_IF

(*Emergency*)
IF NOT i_bLO1_Main THEN
	nState := 0;
END_IF

(*Last states*)
IF(nState >= 1000) AND (nState < 150000) THEN
(*Steps before any state*)
	IF anLastStates[0] <> nState THEN
		FOR iLastStates:=500 TO 1 BY -1 DO
			anLastStates[iLastStates]:= anLastStates[iLastStates-1];
		END_FOR
		anLastStates[0]:= nState;
	END_IF
END_IF	

IF fbRobot.bError
THEN
	bError  :=  TRUE;
END_IF


(*Yet, constantly write the offset to the used value, because it is the only needed offset now AT 2023.11.17.*)
nPosX := 62.5;
nPosY := (nDimX+4)/2+1;


CASE nState OF
{region "Alaphelyzet felvétel"}
	(****************************************************************************************)
	(******************************* Alaphelyzetfelvétel ************************************)
	(****************************************************************************************)	
	0:		(*-----=== Kimenetek törlése ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - A biztonsági kör nem aktív');
			 
		fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
		bStartCNC1 := FALSE;
		bStartCNC2 := FALSE;
		bStartCNC3 := FALSE;	
		nPlaceBackFromThisCNC := 0;
			 
		IF i_bLO1_Main AND NOT bManualMode AND NOT fbRobot.bPendantMode THEN
			nState := nState + 20;
		END_IF

	20: 
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot alaphelyzetfelvétel');
		fbRobot.eCommand := E_CNC_Robot_Command.Home;
		IF NOT fbRobot.bBusy AND fbRobot.bReady THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			nState := nState + 20;
		END_IF

	40:
		nState := 10000;
{endregion}
	 

	10000:
		nState := 10500;
		
	10500:	
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Paletta kivétel-beküldés ellenőrzés');
		
		//Mi van ha megszakad a folyamat valami maitt?  Akkor is jó ha itt kezd? 
		
		IF stDutData_Cnc1.bDone AND (CNC_1.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_1.bCNCHandshakeTimeout))THEN	//CNC Done, and CNC Door Opened
			
			nPlaceBackFromThisCNC := 1;
			IF fbLift_1A.nTagID = stDutData_Cnc1.nPaletteId THEN	//Decide that what lift should be used
				ePath := E_CNC_Robot_Path.CNC1_to_Lift1A;
				nState := 11000;
			ELSIF fbLift_1B.nTagID = stDutData_Cnc1.nPaletteId THEN
				ePath := E_CNC_Robot_Path.CNC1_to_Lift1B;
				nState := 11000;
			ELSE
				sState := CONCAT(UDINT_TO_STRING(nState) ,' - Ismeretlen cél lift paletta lerakáskor CNC 1 - Paletta Lift 1 A-B között');
			END_IF
			
		ELSIF stDutData_Cnc2.bDone AND (CNC_2.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_2.bCNCHandshakeTimeout))THEN //CNC Done, and CNC Door Opened
			
			nPlaceBackFromThisCNC := 2;
			IF fbLift_2A.nTagID = stDutData_Cnc2.nPaletteId THEN	//Decide that what lift should be used
				ePath := E_CNC_Robot_Path.CNC2_to_Lift2A;
				nState := 11000;
			ELSIF fbLift_2B.nTagID = stDutData_Cnc2.nPaletteId THEN
				ePath := E_CNC_Robot_Path.CNC2_to_Lift2B;
				nState := 11000;
			ELSE
				sState := CONCAT(UDINT_TO_STRING(nState) ,' - Ismeretlen cél lift paletta lerakáskor CNC 2 - Paletta Lift 2 A-B között');
			END_IF
		
		ELSIF stDutData_Cnc3.bDone AND (CNC_3.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_3.bCNCHandshakeTimeout))THEN //CNC Done, and CNC Door Opened
				
			nPlaceBackFromThisCNC := 3;
			IF fbLift_3A.nTagID = stDutData_Cnc3.nPaletteId THEN	//Decide that what lift should be used
				ePath := E_CNC_Robot_Path.CNC3_to_Lift3A;
				nState := 11000;
			ELSIF fbLift_3B.nTagID = stDutData_Cnc3.nPaletteId THEN
				ePath := E_CNC_Robot_Path.CNC3_to_Lift3B;
				nState := 11000;
			ELSE
				sState := CONCAT(UDINT_TO_STRING(nState) ,' - Ismeretlen cél lift paletta lerakáskor CNC 3 - Paletta Lift 3 A-B között');
			END_IF	
			
		
		ELSIF  (NOT CNC_1.bCNCRunning) AND (CNC_1.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_1.bCNCHandshakeTimeout))THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_1A.nTagID].nState.1 THEN	//Lifted, wait for CNC
		 		stDutData_Cnc1 := GVL_Palette.arrPalette[fbLift_1A.nTagID];
				ePath := E_CNC_Robot_Path.Lift1A_to_CNC1;
				bStartCNC1 := TRUE;
				nState := 11000;
			END_IF
		ELSIF  (NOT CNC_1.bCNCRunning) AND (CNC_1.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_1.bCNCHandshakeTimeout))THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_1B.nTagID].nState.1 THEN	
		 		stDutData_Cnc1 := GVL_Palette.arrPalette[fbLift_1B.nTagID];
				ePath := E_CNC_Robot_Path.Lift1B_to_CNC1;
				bStartCNC1 := TRUE;
				nState := 11000;
			END_IF
			
			
		ELSIF  (NOT CNC_2.bCNCRunning) AND (CNC_2.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_2.bCNCHandshakeTimeout))THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_2A.nTagID].nState.1 THEN
		 		stDutData_Cnc2 := GVL_Palette.arrPalette[fbLift_2A.nTagID];
				ePath := E_CNC_Robot_Path.Lift2A_to_CNC2;
				bStartCNC2 := TRUE;
				nState := 11000;
			END_IF
		ELSIF  (NOT CNC_2.bCNCRunning) AND (CNC_2.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_2.bCNCHandshakeTimeout))THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_2B.nTagID].nState.1 THEN
		 		stDutData_Cnc2 := GVL_Palette.arrPalette[fbLift_2B.nTagID];
				ePath := E_CNC_Robot_Path.Lift2B_to_CNC2;
				bStartCNC2 := TRUE;
				nState := 11000;
			END_IF
			
			
		ELSIF  (NOT CNC_3.bCNCRunning) AND (CNC_3.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_3.bCNCHandshakeTimeout)) THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_3A.nTagID].nState.1 THEN
		 		stDutData_Cnc3 := GVL_Palette.arrPalette[fbLift_3A.nTagID];
				ePath := E_CNC_Robot_Path.Lift3A_to_CNC3;
				bStartCNC3 := TRUE;
				nState := 11000;
			END_IF
		ELSIF  (NOT CNC_3.bCNCRunning) AND (CNC_3.stCNC_Data^.DoorControl_DoorOpened AND (NOT CNC_3.bCNCHandshakeTimeout)) THEN //Pallet is at the stopper, CNC not running, CNC door is opened
			IF GVL_Palette.arrPalette[fbLift_3B.nTagID].nState.1 THEN
		 		stDutData_Cnc3 := GVL_Palette.arrPalette[fbLift_3B.nTagID];
				ePath := E_CNC_Robot_Path.Lift3B_to_CNC3;
				bStartCNC3 := TRUE;
				nState := 11000;
			END_IF
		END_IF
		

		
{region "Alaphelyzet"}
	(****************************************************************************************)
	(*********************************** Alaphelyzet ****************************************)
	(****************************************************************************************)	
	11000:		(* -----=== Várakozás parancsra ===----- *)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzet');
		CASE ePath OF
			E_CNC_Robot_Path.Lift1A_to_CNC1:
												nProgNr := 1;
												fbRobot.nCncNumber := 1;
												fbRobot.eLifterNumber := E_Lifter.Lifter_1A;
												nDimX := stDutData_Cnc1.nDimX;
												nDimY := stDutData_Cnc1.nDimY;
												nDimZ := stDutData_Cnc1.nDimZ;
												nPosX := stDutData_Cnc1.nPosX;
												nPosY := stDutData_Cnc1.nPosY;
												nWeight := stDutData_Cnc1.nWeight;
												nTorque := stDutData_Cnc1.nTorque;
//												stDutData_Cnc1.nDutId := 1;
												nState := 20000;
			E_CNC_Robot_Path.CNC1_to_Lift1A:
												fbRobot.nCncNumber := 1;
												fbRobot.eLifterNumber := E_Lifter.Lifter_1A;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc1.nWeight;	
												nState := 30000;

			E_CNC_Robot_Path.Lift1B_to_CNC1:
												nProgNr := 2;
												fbRobot.nCncNumber := 1;
												fbRobot.eLifterNumber := E_Lifter.Lifter_1B;
												nDimX := stDutData_Cnc1.nDimX;
												nDimY := stDutData_Cnc1.nDimY;
												nDimZ := stDutData_Cnc1.nDimZ;
												nPosX := stDutData_Cnc1.nPosX;
												nPosY := stDutData_Cnc1.nPosY;
												nWeight := stDutData_Cnc1.nWeight;
												nTorque := stDutData_Cnc1.nTorque;
//												stDutData_Cnc1.nDutId := 1;
												nState := 20000;

			E_CNC_Robot_Path.CNC1_to_Lift1B:
												fbRobot.nCncNumber := 1;
												fbRobot.eLifterNumber := E_Lifter.Lifter_1B;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc1.nWeight;
												nState := 30000;
													 
														  
															   
																	
																		 
													 
			E_CNC_Robot_Path.Lift2A_to_CNC2:
												nProgNr := 3;
												fbRobot.nCncNumber := 2;
												fbRobot.eLifterNumber := E_Lifter.Lifter_2A;
												nDimX := stDutData_Cnc2.nDimX;
												nDimY := stDutData_Cnc2.nDimY;
												nDimZ := stDutData_Cnc2.nDimZ;
												nPosX := stDutData_Cnc2.nPosX;
												nPosY := stDutData_Cnc2.nPosY;
												nWeight := stDutData_Cnc2.nWeight;
												nTorque := stDutData_Cnc2.nTorque;
//												stDutData_Cnc2.nDutId := 1;
												nState := 20000;
			E_CNC_Robot_Path.CNC2_to_Lift2A:
												fbRobot.nCncNumber := 2;
												fbRobot.eLifterNumber := E_Lifter.Lifter_2A;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc2.nWeight;	
												nState := 30000;

			E_CNC_Robot_Path.Lift2B_to_CNC2:
												nProgNr := 4;
												fbRobot.nCncNumber := 2;
												fbRobot.eLifterNumber := E_Lifter.Lifter_2B;
												nDimX := stDutData_Cnc2.nDimX;
												nDimY := stDutData_Cnc2.nDimY;
												nDimZ := stDutData_Cnc2.nDimZ;
												nPosX := stDutData_Cnc2.nPosX;
												nPosY := stDutData_Cnc2.nPosY;
												nWeight := stDutData_Cnc2.nWeight;
												nTorque := stDutData_Cnc2.nTorque;
//												stDutData_Cnc2.nDutId := 1;
												nState := 20000;

			E_CNC_Robot_Path.CNC2_to_Lift2B:
												fbRobot.nCncNumber := 2;
												fbRobot.eLifterNumber := E_Lifter.Lifter_2B;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc2.nWeight;
												nState := 30000;
													 
														  
															   
																	
																		 
																			  
																				   
			E_CNC_Robot_Path.Lift3A_to_CNC3:
												nProgNr := 5;
												fbRobot.nCncNumber := 3;
												fbRobot.eLifterNumber := E_Lifter.Lifter_3A;
												nDimX := stDutData_Cnc3.nDimX;
												nDimY := stDutData_Cnc3.nDimY;
												nDimZ := stDutData_Cnc3.nDimZ;
												nPosX := stDutData_Cnc3.nPosX;
												nPosY := stDutData_Cnc3.nPosY;
												nWeight := stDutData_Cnc3.nWeight;
												nTorque := stDutData_Cnc3.nTorque;
//												stDutData_Cnc3.nDutId := 1;
												nState := 20000;
			E_CNC_Robot_Path.CNC3_to_Lift3A:
												fbRobot.nCncNumber := 3;
												fbRobot.eLifterNumber := E_Lifter.Lifter_3A;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc3.nWeight;	
												nState := 30000;

			E_CNC_Robot_Path.Lift3B_to_CNC3:
												nProgNr := 6;
												fbRobot.nCncNumber := 3;
												fbRobot.eLifterNumber := E_Lifter.Lifter_3B;
												nDimX := stDutData_Cnc3.nDimX;
												nDimY := stDutData_Cnc3.nDimY;
												nDimZ := stDutData_Cnc3.nDimZ;
												nPosX := stDutData_Cnc3.nPosX;
												nPosY := stDutData_Cnc3.nPosY;
												nWeight := stDutData_Cnc3.nWeight;
												nTorque := stDutData_Cnc3.nTorque;
//												stDutData_Cnc3.nDutId := 1;
												nState := 20000;

			E_CNC_Robot_Path.CNC3_to_Lift3B:
												fbRobot.nCncNumber := 3;
												fbRobot.eLifterNumber := E_Lifter.Lifter_3B;
												fbRobot.nOffset_X := nPosX;
												fbRobot.nOffset_Y := nPosY;
												fbRobot.nWeight := stDutData_Cnc3.nWeight;
												nState := 30000;
		END_CASE
{endregion}

{region "bepakolás a CNC-be"}
	(****************************************************************************************)
	(********************************** Kiemelő -> CNC **************************************)
	(****************************************************************************************)
	20000:		(*-----=== Szkennelési pozícióba ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot kamara pozícióba');
		
		bStartCNC1 := FALSE;
		bStartCNC2 := FALSE;
		bStartCNC3 := FALSE;	 
		
		fbRobot.nOffset_X := 0;
		fbRobot.nOffset_Y := 0;
		fbRobot.nOffset_Z := 0;
		fbRobot.nOffset_W := 0;
		fbRobot.nOffset_P := 0;
		fbRobot.nOffset_R := 0;
		fbRobot.eCommand := E_CNC_Robot_Command.Camera_Lifter;
		IF fbRobot.bBusy THEN
			ePath := E_CNC_Robot_Path.NoPath;
			nState := nState + 20;
		END_IF
		
	20020:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	20040:		(*-----=== 3D kamera triggerelése ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - 3D kamera triggerelése');
		IF fb3DCam.CamCheck(nProgNr, nDimX, nDimY, nDimZ, nErrorId) THEN
			IF fb3DCam.p_Pass THEN
				nState := nState + 20;
			ELSE
				nState := 200000;
			END_IF
		END_IF

	20060:		(*-----=== Darabfelvétel ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot felvételi pozícióba');
		fbRobot.nOffset_X := fb3DCam.p_PosX;
		fbRobot.nOffset_Y := fb3DCam.p_PosY;
		fbRobot.nOffset_Z := fb3DCam.p_PosZ;
		fbRobot.nOffset_W := fb3DCam.p_PosW;
		fbRobot.nOffset_P := fb3DCam.p_PosP;
		fbRobot.nOffset_R := fb3DCam.p_PosR;
		fbRobot.eCommand := E_CNC_Robot_Command.Pick_Up_Lifter;
		IF fbRobot.bBusy THEN
			nState := nState + 20;
		END_IF
		
	20080:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	20100:		(*-----=== Darab lerakása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Darab lerakása CNC1-be');
		nPosX := 62.5;
		nPosY := (nDimX+4)/2+1;
		fbRobot.nOffset_X := nPosX;
		fbRobot.nOffset_Y := nPosY;
		fbRobot.nOffset_Z := 0;
		fbRobot.nOffset_W := 0;
		fbRobot.nOffset_P := 0;
		fbRobot.nOffset_R := 0;
		fbRobot.eCommand := E_CNC_Robot_Command.Put_Down_CNC;
		IF fbRobot.bBusy THEN
			nState := nState + 20;
		END_IF
		
	20120:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
			   
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	20140:		(*-----=== Robot QuickHome pozícióba ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot HOME pozícióba');
		fbRobot.nOffset_X := 0;
		fbRobot.nOffset_Y := 0;
		fbRobot.nOffset_Z := 0;
		fbRobot.nOffset_W := 0;
		fbRobot.nOffset_P := 0;
		fbRobot.nOffset_R := 0;
		fbRobot.eCommand := E_CNC_Robot_Command.QuickHome;
		IF fbRobot.bBusy THEN
			nState := nState + 20;
		END_IF
		
	20160:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	20180:
		nState := 10000;
{endregion}

{region "kipakolás a CNC-ből"}
	(****************************************************************************************)
	(********************************** CNC -> Kiemelő **************************************)
	(****************************************************************************************)
	30000:		(*-----=== CNC pozícióba ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot CNC pozícióba');
		fbRobot.eCommand := E_CNC_Robot_Command.Pick_Up_CNC;
		IF fbRobot.bBusy THEN
			ePath := E_CNC_Robot_Path.NoPath;
			nState := nState + 20;
		END_IF

	30020:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	30040:		(*-----=== Lift pozícióba ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot Lift pozícióba');
		fbRobot.eCommand := E_CNC_Robot_Command.Put_Down_Lifter;
		IF fbRobot.bBusy THEN
			nState := nState + 20;
		END_IF

	30060:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
			 
		//Liftek visszaküldése alaphelyzetbe			  
		IF nPlaceBackFromThisCNC = 1 THEN
			stDutData_Cnc1.nState.3 := TRUE;
		ELSIF nPlaceBackFromThisCNC = 2 THEN
			stDutData_Cnc2.nState.3 := TRUE;	
		ELSIF nPlaceBackFromThisCNC = 3 THEN
			stDutData_Cnc3.nState.3 := TRUE; 
		END_IF			  
							  		   
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	30080:		(*-----=== Robot QuickHome pozícióba ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Robot HOME pozícióba');
		fbRobot.nOffset_X := 0;
		fbRobot.nOffset_Y := 0;
		fbRobot.nOffset_Z := 0;
		fbRobot.nOffset_W := 0;
		fbRobot.nOffset_P := 0;
		fbRobot.nOffset_R := 0;
		fbRobot.eCommand := E_CNC_Robot_Command.QuickHome;
		IF fbRobot.bBusy THEN
			nState := nState + 20;
		END_IF
		
	30100:		(*-----=== Várakozás Robotmozgásra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozáas robot mozgásra');
		IF NOT fbRobot.bBusy THEN
			fbRobot.eCommand := E_CNC_Robot_Command.NoCommand;
			fb3DCam.ResetCam();
			nState := nState + 20;
		END_IF

	30120:
		nState := 10000;


	
	150000: (* Maintenance *)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Maintenance');
		IF NOT bManualMode THEN
			nState := 0;
		END_IF
		
	200000:(* Error handling *)
		sState := CONCAT(UDINT_TO_STRING(nState) ,CONCAT(' - Error, from this state: ' , sState));
		nState := 200020;

	200020:(* Error handling *)
		IF bAckP THEN
			CASE nStatePrevious OF
				0..9999: nState := 0;
//				10000..25000: nState := 10000;
//				30000..31000: nState := 30000;
			ELSE nState := 0;
			END_CASE
		END_IF	
		
	ELSE //Not a real step, for test purposes
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Not a real step, for test purposes');
END_CASE

(*Timers***************************************************)
fbCycleTime(IN:= nState > 10000 AND nState <= 95000, PT:= T#1D, Q=> , ET=> );
IF nState > 10000 AND nState <= 95000 THEN
	nCycleTime := TIME_TO_REAL(fbCycleTime.ET)/1000;
END_IF

Robot();]]></ST>
    </Implementation>
    <Action Name="Camera" Id="{01e954f6-ebe6-48ca-9c30-915eaa555bb7}">
      <Implementation>
        <ST><![CDATA[fb3DCam();]]></ST>
      </Implementation>
    </Action>
    <Action Name="MySQL" Id="{856c9bb8-81d0-4ff8-a14d-3c1fa2fa7f9b}">
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Action>
    <Action Name="Robot" Id="{98293ac6-e87b-4b84-9657-85fa88c3b007}">
      <Implementation>
        <ST><![CDATA[arRobotEvents[0] := TC_EVENTS.MyEvents.RobotNoPneumaticsErr;
arRobotEvents[1] := TC_EVENTS.MyEvents.RobotNotCorrectPrgErr;
arRobotEvents[2] := TC_EVENTS.MyEvents.RobotNotProdOnRobotErr;
arRobotEvents[3] := TC_EVENTS.MyEvents.RobotProdOnRobotErr;
arRobotEvents[4] := TC_EVENTS.MyEvents.RobotGripperOpenErr;
arRobotEvents[5] := TC_EVENTS.MyEvents.RobotGripperCloseErr;
arRobotEvents[6] := TC_EVENTS.MyEvents.RobotNotCorrectViseNumberErr;
arRobotEvents[7] := TC_EVENTS.MyEvents.RobotNotReadyErr;
arRobotEvents[8] := TC_EVENTS.MyEvents.RobotBasePosErr;

(*-----=== Gripper jelek kezelése ===-----*)
fbGripperPos1(
	nCalOffset:= 31, 
	nReqDistance:= nDimY, 
	bPendantMode:= fbRobot.bPendantMode, 
	bValid=> , 
	nDistance=> , 
	bGripperInPos=> );

fbGripperPos2(
	nCalOffset:= 31.1, 
	nReqDistance:= nDimY, 
	bPendantMode:= fbRobot.bPendantMode, 
	bValid=> , 
	nDistance=> , 
	bGripperInPos=> );



(*-----=== Hand shake jelek kezelése ===-----*)
fbRobot.bCNC_1_Reset := 			fbRobot.bCNC_1_Set AND				// 05.1	Robot CNC-1-be menne
									i_bRobotDoorOpened_CNC1 AND
									CNC_1.nState = 11100;

fbRobot.bCNC_1_ViseClose_Reset := 	fbRobot.bCNC_1_ViseClose_Set AND	// 05.2	Robot CNC-1 satu zárásra vár
									CNC_1.nState = 11300;

fbRobot.bCNC_1_ViseOpen_Reset := 	fbRobot.bCNC_1_ViseOpen_Set AND		// 05.3	Robot CNC-1 satu nyitásra vár
									CNC_1.nState = 12000;

fbRobot.bCNC_2_Reset := 			fbRobot.bCNC_2_Set AND				// 05.4	Robot CNC-2-be menne
									i_bRobotDoorOpened_CNC2;

fbRobot.bCNC_2_ViseClose_Reset := 	fbRobot.bCNC_2_ViseClose_Set;		// 05.5	Robot CNC-2 satu zárásra vár

fbRobot.bCNC_2_ViseOpen_Reset := 	fbRobot.bCNC_2_ViseOpen_Set;		// 05.6	Robot CNC-2 satu nyitásra vár

fbRobot.bCNC_3_Reset := 			fbRobot.bCNC_3_Set AND				// 05.7	Robot CNC-3-be menne
									i_bRobotDoorOpened_CNC3;

fbRobot.bCNC_3_ViseClose_Reset := 	fbRobot.bCNC_3_ViseClose_Set;		// 05.8	Robot CNC-3 satu zárásra vár
	
fbRobot.bCNC_3_ViseOpen_Reset := 	fbRobot.bCNC_3_ViseOpen_Set;		// 06.1	Robot CNC-3 satu nyitásra vár

fbRobot.bPalette_1_Reset := 		fbRobot.bPalette_1_Set;				// 06.2	Robot Kiemelő 1-hez menne

fbRobot.bPalette_2_Reset := 		fbRobot.bPalette_2_Set;				// 06.3	Robot Kiemelő 2-höz menne

fbRobot.bPalette_3_Reset := 		fbRobot.bPalette_3_Set;				// 06.4	Robot Kiemelő 3-hoz menne

fbRobot.bGripperClosed_Reset := 	fbRobot.bGripperClosed_Set AND		// 06.5	Robot megfogó zárás SET
									(fbGripperPos1.bGripperInPos OR
									fbGripperPos2.bGripperInPos);


fbRobot(
	sName:= 'Fanuc - 7 axis', 
	bEn:= i_bLO2_Main, 
	timeBaseState:= T#40S, 
	bAck:= bAckP, 
	bOverride:= nOverride, 
	stEventArray:= arRobotEvents);]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>