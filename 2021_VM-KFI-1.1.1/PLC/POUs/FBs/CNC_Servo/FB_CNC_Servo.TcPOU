<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CNC_Servo" Id="{0744176a-84fd-48f9-b591-7047c81fb408}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CNC_Servo
VAR_INPUT
	sName						: STRING;
	eCommand					: E_CncServoCommand;
	nPosition					: LREAL;				// Termék nominális mérete
	nTorque						: REAL;					// Meghúzási nyomaték
	bErrorAck					: BOOL;
	bEnable						: BOOL;
	bManualMode					: BOOL;
END_VAR
VAR	(* Control *)
	nState						:UDINT;
	nStatePrevious				:UDINT;
	sState						:STRING(500);
	fbCycleTime					:TON;
	nCycleTime					:REAL;
END_VAR
VAR //LastStates
	anLastStates				:ARRAY[0..500] OF UDINT;
    iLastStates					:INT;
END_VAR
VAR_OUTPUT
	bReady						: BOOL;
	bBusy 						: BOOL;
	bDone 						: BOOL;
	bError 						: BOOL;
END_VAR
VAR
	fbMoveUpper					: FB_Bistabil;
	fbMoveLower					: FB_Bistabil;
	fbLock						: FB_Bistabil;
	fbVisePos					: FB_BTL1AR0;
	fbServoVise					: FB_ServoVise;
	q_bToolCheckBlower 	AT %Q*	: BOOL;		// Szerszám ellenőrző tisztítás
	bRotate						: BOOL := FALSE;
	tAttach						: TON;
	tFillUp						: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Timers *)
tAttach(IN:= fbMoveLower.bWorkPosCmd AND fbMoveUpper.bWorkPosCmd AND NOT bRotate, PT:= T#2500MS, Q=> , ET=> );
tFillUp(IN:= fbMoveLower.bWorkPosCmd AND fbMoveLower.bBasePosCmd, PT:= T#800MS, Q=> , ET=> );

(*Error handling*)
IF nState > 0 AND nState < 150000 THEN
	nStatePrevious := nState;
END_IF

(*Maintance*)
IF bManualMode THEN
	nState := 150000;
END_IF

(*Emergency*)
IF NOT bEnable THEN
	nState := 0;
END_IF

(*Last states*)
IF(nState >= 1000) AND (nState < 150000) THEN
(*Steps before any state*)
	IF anLastStates[0] <> nState THEN
		FOR iLastStates:=500 TO 1 BY -1 DO
			anLastStates[iLastStates]:= anLastStates[iLastStates-1];
		END_FOR
		anLastStates[0]:= nState;
	END_IF
END_IF	

IF fbMoveUpper.bError OR fbMoveLower.bError OR fbLock.bError OR fbServoVise.bError
THEN
	bError  :=  TRUE;
END_IF



CASE nState OF
{region "Alaphelyzet felvétel"}
	(****************************************************************************************)
	(******************************* Alaphelyzetfelvétel ************************************)
	(****************************************************************************************)	
	0:		(*-----=== Kimenetek törlése ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - A biztonsági kör nem aktív');
		bReady := FALSE;
		bBusy := FALSE;
		bDone := FALSE;
		fbLock.bBasePosCmd := FALSE;
		fbLock.bWorkPosCmd := FALSE;
		fbMoveLower.bBasePosCmd := FALSE;
		fbMoveLower.bWorkPosCmd := FALSE;
		fbMoveUpper.bBasePosCmd := FALSE;
		fbMoveUpper.bWorkPosCmd := FALSE;
		IF bEnable THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF

	20:		(*-----=== Alaphelyzet ellenőrzés ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzetfelvétel: - Hengerek ellenőrzése');
		IF	fbLock.i_bBasePos AND
			fbMoveLower.i_bBasePos AND
			fbMoveUpper.i_bBasePos THEN
					fbLock.bBasePosCmd := TRUE;									// Hengerek alaphelyzetben -> Vezérlést ráadni és hajrá!!
					fbLock.bWorkPosCmd := FALSE;
					fbMoveLower.bBasePosCmd := TRUE;
					fbMoveLower.bWorkPosCmd := FALSE;
					fbMoveUpper.bBasePosCmd := TRUE;
					fbMoveUpper.bWorkPosCmd := FALSE;
					IF bStepEnable THEN
						nState := 60;
					END_IF
		ELSIF	fbMoveLower.i_bBasePos AND
				fbMoveUpper.i_bBasePos THEN
					fbLock.bBasePosCmd := FALSE;								// Hengerek munkahelyzetben -> Vezérlést ráadni és hajrá!! 
					fbLock.bWorkPosCmd := TRUE;
					fbMoveLower.bBasePosCmd := FALSE;
					fbMoveLower.bWorkPosCmd := TRUE;
					fbMoveUpper.bBasePosCmd := FALSE;
					fbMoveUpper.bWorkPosCmd := TRUE;
					IF bStepEnable THEN
						nState := nState + 40;
					END_IF
		ELSE
					fbLock.bBasePosCmd := FALSE;								// Hengerek se itt se ott -> feltöltés szükséges
					fbLock.bWorkPosCmd := TRUE;
					fbMoveLower.bBasePosCmd := TRUE;
					fbMoveLower.bWorkPosCmd := TRUE;
					fbMoveUpper.bBasePosCmd := TRUE;
					fbMoveUpper.bWorkPosCmd := TRUE;
					IF bStepEnable THEN
						nState := nState + 20;
					END_IF
		END_IF
	
	40:		(*-----=== Hengerek feltöltése ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzetfelvétel: - Hengerek feltöltése');
		IF tFillUp.Q THEN
			fbMoveLower.bBasePosCmd := TRUE;
			fbMoveLower.bWorkPosCmd := FALSE;
			fbMoveUpper.bBasePosCmd := TRUE;
			fbMoveUpper.bWorkPosCmd := FALSE;
			nState := nState + 20;
		END_IF

	
	60:		(*-----=== fbLock munkahelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzetfelvétel: - Lock henger munkahelyzetbe');
		fbLock.bBasePosCmd := FALSE;
		fbLock.bWorkPosCmd := TRUE;
		IF fbLock.bWorkPosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF
		
	80:		(*-----=== fbMoveLower & fbMoveUpper alaphelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzetfelvétel: - Mozgató hengerek alaphelyzetbe');
		fbMoveLower.bBasePosCmd := TRUE;
		fbMoveLower.bWorkPosCmd := FALSE;
		fbMoveUpper.bBasePosCmd := TRUE;
		fbMoveUpper.bWorkPosCmd := FALSE;
		IF fbMoveLower.bBasePosStab AND fbMoveUpper.bBasePosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF

	100:		(*-----=== fbLock alaphelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzetfelvétel: - Lock henger alaphelyzetbe');
		fbLock.bBasePosCmd := TRUE;
		fbLock.bWorkPosCmd := FALSE;
		IF fbLock.bBasePosStab THEN
			IF bStepEnable THEN
				bBusy := FALSE;
				bDone := TRUE;
				nState := 10000;
			END_IF
		END_IF
{endregion}

{region "Alaphelyzet"}
	(****************************************************************************************)
	(*********************************** Alaphelyzet ****************************************)
	(****************************************************************************************)	
	10000:		(*-----=== Várakozás parancsra ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Alaphelyzet, várakozás parancsra');
		IF eCommand = E_CncServoCommand.NoCommand THEN
				bReady := TRUE;
				bBusy := FALSE;
				bDone := FALSE;
		ELSIF eCommand = E_CncServoCommand.Base THEN
				bBusy := TRUE;
				nState := 11000;
		ELSE
				bBusy := TRUE;
				nState := 12000;
		END_IF
		
{endregion}

{region "Alaphelyzetbe mozgás"}
	(****************************************************************************************)
	(***************************** Alaphelyzetbe mozgás *************************************)
	(****************************************************************************************)	
	11000:		(*-----=== fbLock munkahelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Lock henger munkahelyzetbe');
		fbLock.bBasePosCmd := FALSE;
		fbLock.bWorkPosCmd := TRUE;
		IF fbLock.bWorkPosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF
		
	11020:		(*-----=== fbMoveLower & fbMoveUpper alaphelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Mozgató hengerek alaphelyzetbe');
		fbMoveLower.bBasePosCmd := TRUE;
		fbMoveLower.bWorkPosCmd := FALSE;
		fbMoveUpper.bBasePosCmd := TRUE;
		fbMoveUpper.bWorkPosCmd := FALSE;
		IF fbMoveLower.bBasePosStab AND fbMoveUpper.bBasePosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF

	11040:		(*-----=== fbLock alaphelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Lock henger alaphelyzetbe');
		fbLock.bBasePosCmd := TRUE;
		fbLock.bWorkPosCmd := FALSE;
		IF fbLock.bBasePosStab THEN
			IF bStepEnable THEN
				bBusy := FALSE;
				bDone := TRUE;
				nState := nState + 20;
			END_IF
		END_IF
	
	11060:		(*-----=== Várakozás parancstörlésre ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Várakozás parancs törlésre');
		IF eCommand = E_CncServoCommand.NoCommand THEN
			bBusy := FALSE;
			bDone := FALSE;
			nState := 10000;
		END_IF
{endregion}

{region "Satu Csatlakoztatás"}
	(****************************************************************************************)
	(***************************** Satu Csatlakoztatás **************************************)
	(****************************************************************************************)	
	12000:		(*-----=== Csatlakoztatás ellenőrzése ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Csatlakoztatás ellenőrzése');
		IF fbMoveLower.bWorkPosStab AND fbMoveUpper.bWorkPosStab THEN
			IF bStepEnable THEN
				nState := 12200;							// A szervo már csatlakoztatva van
			END_IF
		ELSE
			IF bStepEnable THEN
				IF bRotate THEN
					nState := nState + 20;					// A szervó alaphelyzetbe van -> csatlakoztatás forgatással
				ELSE
					nState := nState + 40;					// A szervó alaphelyzetbe van -> csatlakoztatás forgatás nélkül
				END_IF
			END_IF
		END_IF

	12020:		(*-----=== fbServoVise csatlakoztatás program indítása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Csatlakoztatási segédmozgás indítása');
		fbServoVise.eCommand := E_ServoVise_Command.Attach;
		IF fbServoVise.bDone THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF

	12040:		(*-----=== fbLock munkahelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Lock henger munkahelyzetbe');
		fbLock.bBasePosCmd := FALSE;
		fbLock.bWorkPosCmd := TRUE;
		IF fbLock.bWorkPosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		END_IF
		
	12060:		(*-----=== fbMoveLower & fbMoveUpper munkahelyzetbe ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Mozgató hengerek munkahelyzetbe');
		fbMoveLower.bBasePosCmd := FALSE;
		fbMoveLower.bWorkPosCmd := TRUE;
		fbMoveUpper.bBasePosCmd := FALSE;
		fbMoveUpper.bWorkPosCmd := TRUE;
		IF fbMoveLower.bWorkPosStab AND fbMoveUpper.bWorkPosStab THEN
			IF bStepEnable THEN
				nState := nState + 20;
			END_IF
		ELSIF tAttach.Q THEN										// Sikertelen csatlakozás -> Szervo bekapcsolása
			IF bStepEnable THEN
				bRotate := TRUE;
				nState := 12000;
			END_IF
		END_IF

	12080:		(*-----=== fbServoVise csatlakoztatás program leállítása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Csatlakoztatási segédmozgás leállítása');
		fbServoVise.eCommand := E_ServoVise_Command.NoCommand;
		IF NOT fbServoVise.bDone THEN
			IF bStepEnable THEN
				bRotate := FALSE;
				nState := 12200;
			END_IF
		END_IF

	12200:		(*-----=== A parancs ellenőrzése ===-----*)
		IF eCommand = E_CncServoCommand.NoCommand THEN
				nState := 10000;
		ELSIF eCommand = E_CncServoCommand.Base THEN
				nState := 11000;
		ELSIF eCommand = E_CncServoCommand.MovePos THEN
				nState := 13000;
		ELSIF eCommand = E_CncServoCommand.Fixed THEN
				nState := 14000;
		ELSIF eCommand = E_CncServoCommand.Release THEN
				nState := 15000;
		END_IF
		
{endregion}

{region "Satu pozícionálás"}
	(****************************************************************************************)
	(******************************** Satu pozícionálás *************************************)
	(****************************************************************************************)	
	13000:		(*-----=== Pozícionálás indítása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Satu pozícionálása');
		fbServoVise.eCommand := E_ServoVise_Command.MoveToPos;
		IF fbServoVise.bDone THEN
			IF bStepEnable THEN
				fbServoVise.eCommand := E_ServoVise_Command.NoCommand;
				bRotate := FALSE;
				nState := 11000;
			END_IF
		END_IF
{endregion}

{region "Satu Rögzytés"}
	(****************************************************************************************)
	(*********************************** Satu Rögzítés **************************************)
	(****************************************************************************************)	
	14000:		(*-----=== Rögzítés indítása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Satu rögzítése');
		fbServoVise.eCommand := E_ServoVise_Command.Fix;
		IF fbServoVise.bDone THEN
			IF bStepEnable THEN
				fbServoVise.eCommand := E_ServoVise_Command.NoCommand;
				bRotate := FALSE;
				nState := 11000;
			END_IF
		END_IF
{endregion}

{region "Satu Kioldás"}
	(****************************************************************************************)
	(************************************ Satu Kioldás **************************************)
	(****************************************************************************************)	
	15000:		(*-----=== Kioldás indítása ===-----*)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Satu kioldása');
		fbServoVise.eCommand := E_ServoVise_Command.Release;
		IF fbServoVise.bDone THEN
			IF bStepEnable THEN
				fbServoVise.eCommand := E_ServoVise_Command.NoCommand;
				bRotate := FALSE;
				nState := 11000;
			END_IF
		END_IF
{endregion}

	150000: (* Maintenance *)
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Maintenance');
		IF NOT bManualMode THEN
			nState := 0;
		END_IF
		
	200000:(* Error handling *)
		sState := CONCAT(UDINT_TO_STRING(nState) ,CONCAT(' - Error, from this state: ' , sState));
		nState := 200020;

	200020:(* Error handling *)
		IF bAckP THEN
			CASE nStatePrevious OF
				0..9999: nState := 0;
//				10000..25000: nState := 10000;
//				30000..31000: nState := 30000;
			ELSE nState := 0;
			END_CASE
		END_IF	
		
	ELSE //Not a real step, for test purposes
		sState := CONCAT(UDINT_TO_STRING(nState) ,' - Not a real step, for test purposes');
END_CASE

Servo();
Pneu();
]]></ST>
    </Implementation>
    <Action Name="Pneu" Id="{92f54c0d-25ad-42ae-a42f-cb0f982d2885}">
      <Implementation>
        <ST><![CDATA[fbMoveUpper(
	sName:= , 
	sBasePosSensor:= , 
	sWorkPosSensor:= , 
	bEn:= bEnable, 
	bEHA:= NOT bManualMode AND NOT fbMoveUpper.bWorkPosCmd, 
	nEHMode:= , 
	bDisableManualCmd:= NOT bManualMode, 
	bBasePosCmd:= , 
	bWorkPosCmd:= , 
	bAck:= bErrorAck, 
	timBasePos:= , 
	timWorkPos:= , 
	timBasePosStab:= , 
	timWorkPosStab:= , 
	i_bBasePos:= , 
	i_bWorkPos:= , 
	sSourceName:= , 
	stBasePosEvent:= , 
	stWorkPosEvent:= , 
	bBasePosStab=> , 
	bWorkPosStab=> , 
	bError=> , 
	sError=> , 
	q_bBasePos=> , 
	q_bWorkPos=> );

fbMoveLower(
	sName:= , 
	sBasePosSensor:= , 
	sWorkPosSensor:= , 
	bEn:= bEnable, 
	bEHA:= NOT bManualMode AND NOT fbMoveLower.bWorkPosCmd, 
	nEHMode:= , 
	bDisableManualCmd:= NOT bManualMode, 
	bBasePosCmd:= , 
	bWorkPosCmd:= , 
	bAck:= bErrorAck, 
	timBasePos:= , 
	timWorkPos:= , 
	timBasePosStab:= , 
	timWorkPosStab:= , 
	i_bBasePos:= , 
	i_bWorkPos:= , 
	sSourceName:= , 
	stBasePosEvent:= , 
	stWorkPosEvent:= , 
	bBasePosStab=> , 
	bWorkPosStab=> , 
	bError=> , 
	sError=> , 
	q_bBasePos=> , 
	q_bWorkPos=> );

fbLock(
	sName:= , 
	sBasePosSensor:= , 
	sWorkPosSensor:= , 
	bEn:= bEnable, 
	bEHA:= NOT bManualMode, 
	nEHMode:= , 
	bDisableManualCmd:= NOT bManualMode, 
	bBasePosCmd:= , 
	bWorkPosCmd:= , 
	bAck:= bErrorAck, 
	timBasePos:= , 
	timWorkPos:= , 
	timBasePosStab:= , 
	timWorkPosStab:= , 
	i_bBasePos:= , 
	i_bWorkPos:= , 
	sSourceName:= , 
	stBasePosEvent:= , 
	stWorkPosEvent:= , 
	bBasePosStab=> , 
	bWorkPosStab=> , 
	bError=> , 
	sError=> , 
	q_bBasePos=> , 
	q_bWorkPos=> );]]></ST>
      </Implementation>
    </Action>
    <Action Name="Servo" Id="{4cf33395-403a-4dac-b66a-09f9e675dd2f}">
      <Implementation>
        <ST><![CDATA[fbVisePos();
fbServoVise(
	bErrorAck:= bAckP, 
	bEnable:= bEnable, 
	eCommand:= , 
	bManualMode:= bManualMode, 
	lrTargetDistance:= nPosition, 
	lrVisePosition:= fbVisePos.nDistance, 
	bVisePosValid:= fbVisePos.bValid, 
	nTargetVelocity:= 4, 
	nTorque:= nTorque, 
	nTorqueRamp:= 10, 
	nTorqueVelocityLimit:= 0.5, 
	nOverride:= 100, 
	nAttachVelocity:= 0.05, 
	stAxisEvent:= , 
	bReady=> , 
	bBusy=> , 
	bDone=> , 
	bError=> );]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>