<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SQL" Id="{25a3dc2c-8c6d-41f8-8333-ff0379645580}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SQL
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbSqlDatabase 			:FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand 			:FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
	fbSqlResult 			:FB_SQLResultEvt(sNetID:='', tTimeout := T#5S); 
	fbSQLStoredProcedure	:FB_SQLStoredProcedureEvt(sNetID:='', tTimeout := T#5S);
	
	nStep					:INT;
	nConnectionStep			:INT;
	
	// Properties
	_Name					:STRING;
	_DBID					:UINT;
	_RecordCounts			:UDINT;
	_Error					:BOOL;
	_ACK					:BOOL;
	_TimeOut				:TIME := T#5S;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _Error THEN
	nStep := 200;
END_IF
IF _Error AND _ACK THEN
	_Error := FALSE;
	nStep := 0;
END_IF
fbSqlDatabase.tTimeout := _TimeOut;
fbSqlCommand.tTimeout := _TimeOut;
fbSqlResult.tTimeout := _TimeOut;
fbSQLStoredProcedure.tTimeout := _TimeOut;]]></ST>
    </Implementation>
    <Folder Name="Private_Methods" Id="{d634c950-d8ac-49b1-a1be-0fb58c104e98}">
      <Folder Name="Stored_Procedure" Id="{ff1dd28b-212c-4ca4-a8ba-0c01d544df33}" />
    </Folder>
    <Folder Name="Properties" Id="{3adccdbb-be0a-4a02-a206-4ae9a6d70f6a}" />
    <Property Name="ACK" Id="{c627cc4a-1c4b-476e-910c-bcd62be5c497}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ACK : BOOL]]></Declaration>
      <Set Name="Set" Id="{cf605164-4724-48c0-93f9-9f721992a384}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_ACK := ACK;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Connect" Id="{4d302e86-8281-4816-9e97-8d0dec3f2da9}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE Connect : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Connect := FALSE;
IF fbSqlDatabase.bConnected THEN
	Connect := TRUE;
ELSIF fbSqlDatabase.Connect(_DBID) THEN
	IF fbSqlDatabase.bError THEN
		_Error := TRUE;
		Connect := TRUE;
	ELSE
		Connect := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="CreateCmd" Id="{42237235-1334-436f-a9c1-ad683f5ea730}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE CreateCmd : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CreateCmd := FALSE;
IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
	IF fbSqlDatabase.bError THEN
		_Error := TRUE;
		CreateCmd := TRUE;
	ELSE
		CreateCmd := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="CreateSP" Id="{b3b37870-efcb-4472-ba82-a735e985dac7}" FolderPath="Private_Methods\Stored_Procedure\">
      <Declaration><![CDATA[METHOD PRIVATE CreateSP : BOOL
VAR_INPUT
	sProcedureName		:REFERENCE TO STRING;											//Store Procedure name
    pParameterInfo		:POINTER TO ARRAY [0..MAX_SPPARAMETER] OF ST_SQLSPParameter;	//Parameter Info Array
	nParameterInfoSize	:UDINT;															//Size of parameter info array	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CreateSP := FALSE;
IF fbSQLDatabase.CreateSP(sProcedureName, pParameterInfo, nParameterInfoSize, ADR(fbSQLStoredProcedure)) THEN
	IF fbSQLDatabase.bError THEN
		_Error := TRUE;
		CreateSP := TRUE;
	ELSE
		CreateSP := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="DBID" Id="{0a98df38-2546-434c-a18c-2e197df4f0bb}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY DBID : UINT]]></Declaration>
      <Get Name="Get" Id="{aa6970c6-18be-40d1-aa02-c64c9ae7b917}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[DBID := _DBID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Disconnect" Id="{0c455447-23db-42fc-827a-ab1e1e45449c}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE Disconnect : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Disconnect := FALSE;
IF fbSqlDatabase.Disconnect() THEN
	IF fbSqlDatabase.bError THEN
		_Error := TRUE;
		Disconnect := TRUE;
	ELSE
		nStep := 0;
		Disconnect := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Error" Id="{bc5da951-d167-4c7d-aead-2fabdac99c67}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Error : BOOL]]></Declaration>
      <Get Name="Get" Id="{628ad4d3-0865-4f34-8c58-05c2f984620b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{55533a9a-bdc0-4dcb-838d-82bde800a588}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE Execute : BOOL
VAR_INPUT
	sCmd		:REFERENCE TO STRING; 	//SQL command
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Execute := FALSE;
IF fbSQLCommand.Execute(ADR(sCmd), SIZEOF(sCmd)) THEN
	IF fbSQLCommand.bError THEN
		_Error := TRUE;
		Execute := TRUE;
	ELSE
		Execute := TRUE;  
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteDataReturn" Id="{9b3ed40d-dc04-417b-a9be-3c61b08efc25}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE ExecuteDataReturn : BOOL
VAR_INPUT
	sCmd		:REFERENCE TO STRING;	//SQL command
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ExecuteDataReturn := FALSE;
IF fbSQLCommand.ExecuteDataReturn(ADR(sCmd), SIZEOF(sCmd), ADR(fbSqlResult)) THEN
	IF fbSQLCommand.bError THEN
		_Error := TRUE;
		ExecuteDataReturn := TRUE;
	ELSE
		ExecuteDataReturn := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteDataReturnSP" Id="{912d7ff2-26de-40f2-accd-1007bc484aa2}" FolderPath="Private_Methods\Stored_Procedure\">
      <Declaration><![CDATA[METHOD ExecuteDataReturnSP : BOOL
VAR_INPUT
	pParameterStrc			:POINTER TO BYTE;												//Parameter struct
	nParameterStrcSize		:UDINT;															//Size of parameter struct
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ExecuteDataReturnSP := FALSE;
IF fbSQLStoredProcedure.ExecuteDataReturn(pParameterStrc, nParameterStrcSize, ADR(fbSqlResult)) THEN
	IF fbSQLStoredProcedure.bError THEN
		_Error := TRUE;
		ExecuteDataReturnSP := TRUE;
	ELSE
		ExecuteDataReturnSP := TRUE;
	END_IF    
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{bea61aaa-73a7-4d4b-8993-e459e9b0248a}">
      <Declaration><![CDATA[METHOD Init : BOOL
VAR_INPUT
	sName		:REFERENCE TO STRING;
	nDBID		:REFERENCE TO UINT;
	tTimeout	:REFERENCE TO TIME;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Name := sName;
_DBID := nDBID;
_TimeOut := tTimeout;
Init := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Modify" Id="{52defccd-039b-4576-b875-02666d4ef8ca}">
      <Declaration><![CDATA[METHOD Modify : BOOL
VAR_INPUT
	sCmd		:REFERENCE TO STRING; 	//SQL command
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Modify := FALSE;
CASE nStep OF 
	0:
		IF Connect() THEN
			nStep := nStep + 20; 
		END_IF
	20:
		IF CreateCmd() THEN
			nStep := nStep + 20;  
		END_IF
		
	40:
		IF Execute(sCmd) THEN
			nStep := nStep + 20; 
		END_IF
	
	60: 
		IF Disconnect() THEN
			nStep := 0;
			Modify := TRUE;
		END_IF
		
	200:
		Modify := TRUE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="Name" Id="{094b9ffa-7c7f-4018-a4d3-9688c054cf84}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Name : STRING]]></Declaration>
      <Get Name="Get" Id="{fe42ac2a-61cd-41fe-80fa-a59f87cccbf4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := _Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Read" Id="{a45b5b5e-e55d-4150-a4c4-3eb3f820acf4}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE Read : BOOL
VAR_INPUT
	pResultRecord			:POINTER TO BYTE;		//Pointer to the struct
	nResultRecordSize		:REFERENCE TO UDINT;	//Size of the struct
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Read := FALSE;
_RecordCounts := fbSQLResult.nDataCount;
IF fbSqlResult.Read(0, _RecordCounts, pResultRecord, nResultRecordSize, TRUE, FALSE) THEN
	IF fbSqlResult.bError THEN
		_Error := TRUE;
		Read := TRUE;
	ELSE
		Read := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="RecordCounts" Id="{f61862cf-d449-480b-a2ef-b1e18b210c83}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY RecordCounts : UDINT]]></Declaration>
      <Get Name="Get" Id="{2d070f0f-9a9c-4b99-a82b-5b9b3692a2fa}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[RecordCounts := _RecordCounts;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ReleaseRead" Id="{c9e4dfed-750c-4f32-affe-9a99df8456cf}" FolderPath="Private_Methods\">
      <Declaration><![CDATA[METHOD PRIVATE ReleaseRead : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ReleaseRead := FALSE;
IF fbSqlResult.Release() THEN
	IF fbSqlResult.bError THEN
		_Error := TRUE;
		ReleaseRead := TRUE;
	ELSE
		ReleaseRead := TRUE; 
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReleaseSP" Id="{8360ab00-3f98-4633-ab92-9c4568929bff}" FolderPath="Private_Methods\Stored_Procedure\">
      <Declaration><![CDATA[METHOD PRIVATE ReleaseSP : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ReleaseSP := FALSE;
IF fbSQLStoredProcedure.Release() THEN
	IF fbSQLStoredProcedure.bError THEN
		_Error := TRUE;
		ReleaseSP := TRUE;
	ELSE
		ReleaseSP := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Select" Id="{42cbb836-a9e1-45e7-9618-d7f0136be98f}">
      <Declaration><![CDATA[METHOD Select : BOOL;
VAR_INPUT
	sCmd					:REFERENCE TO STRING;	//SQL command
	pResultRecord			:POINTER TO BYTE;		//Pointer to the struct
	nResultRecordSize		:UDINT;					//Size of the struct
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Select := FALSE;
CASE nStep OF 
	0:
		IF Connect() THEN
			nStep := nStep + 20;  
		END_IF
		
	20:
		IF CreateCmd() THEN
			nStep := nStep + 20;  
		END_IF

	40:
		IF ExecuteDataReturn(sCmd) THEN
			nStep := nStep + 20;
		END_IF
		
	60:
		IF Read(pResultRecord, nResultRecordSize) THEN
			nStep := nStep + 20; 
		END_IF
			
	80: 
		IF ReleaseRead() THEN
			nStep := nStep + 20; 
		END_IF
	
	100:
		IF Disconnect() THEN
			nStep := 0;
			Select := TRUE;
		END_IF
		
	200:
		MEMSET(pResultRecord,0, nResultRecordSize);
		_RecordCounts := 0;
		Select := TRUE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="StoredProcedure" Id="{194d860a-e88c-4885-80ef-8aa2b6fd6f40}">
      <Declaration><![CDATA[METHOD StoredProcedure : BOOL
VAR_INPUT
	sProcedureName		:REFERENCE TO STRING;											//Store Procedure name
    pParameterInfo		:POINTER TO ARRAY [0..MAX_SPPARAMETER] OF ST_SQLSPParameter;	//Parameter Info Array
	nParameterInfoSize	:UDINT;															//Size of parameter info array	
	pParameterStrc		:POINTER TO BYTE;												//Parameter struct
	nParameterStrcSize	:UDINT;															//Size of parameter struct
	pResultRecord		:POINTER TO BYTE;												//Pointer to the struct
	nResultRecordSize	:UDINT;															//Size of the struct
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[StoredProcedure := FALSE;
CASE nStep OF 
	0:
		IF Connect() THEN
			nStep := nStep + 20;  
		END_IF
		
	20:
		IF CreateSP(sProcedureName, pParameterInfo, nParameterInfoSize) THEN
			nStep := nStep + 20;
		END_IF
		
	40:
		IF ExecuteDataReturnSP(pParameterStrc, nParameterStrcSize) THEN
			nStep := nStep + 20;
		END_IF
		
	60:
		IF Read(pResultRecord, nResultRecordSize) THEN
			nStep := nStep + 20; 
		END_IF
			
	80: 
		IF ReleaseRead() THEN
			nStep := nStep + 20; 
		END_IF
		
	100:
		IF ReleaseSP() THEN
			nStep := nStep + 20; 
		END_IF
	
	120:
		IF Disconnect() THEN
			nStep := 0;
			StoredProcedure := TRUE;
		END_IF
		
	200:
		MEMSET(pResultRecord,0, nResultRecordSize);
		_RecordCounts := 0;
		StoredProcedure := TRUE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="TimeOut" Id="{155c609d-3fc8-4018-bf1c-efb02bc8f475}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY TimeOut : Time]]></Declaration>
      <Get Name="Get" Id="{f233e474-bdce-4f4f-9e26-f243c17b6e8a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TimeOut := _TimeOut;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_SQL">
      <LineId Id="140" Count="2" />
      <LineId Id="105" Count="3" />
      <LineId Id="137" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="139" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.ACK.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Connect">
      <LineId Id="24" Count="0" />
      <LineId Id="40" Count="4" />
      <LineId Id="48" Count="0" />
      <LineId Id="45" Count="2" />
      <LineId Id="39" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.CreateCmd">
      <LineId Id="24" Count="0" />
      <LineId Id="17" Count="6" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.CreateSP">
      <LineId Id="12" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="13" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.DBID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Disconnect">
      <LineId Id="23" Count="0" />
      <LineId Id="16" Count="2" />
      <LineId Id="24" Count="0" />
      <LineId Id="19" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Execute">
      <LineId Id="14" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="15" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.ExecuteDataReturn">
      <LineId Id="14" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="13" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.ExecuteDataReturnSP">
      <LineId Id="14" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Init">
      <LineId Id="10" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Modify">
      <LineId Id="94" Count="1" />
      <LineId Id="152" Count="2" />
      <LineId Id="112" Count="0" />
      <LineId Id="170" Count="2" />
      <LineId Id="113" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="168" Count="1" />
      <LineId Id="122" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Read">
      <LineId Id="15" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="16" Count="0" />
      <LineId Id="9" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.RecordCounts.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.ReleaseRead">
      <LineId Id="19" Count="7" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.ReleaseSP">
      <LineId Id="13" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.Select">
      <LineId Id="186" Count="5" />
      <LineId Id="265" Count="0" />
      <LineId Id="192" Count="5" />
      <LineId Id="204" Count="0" />
      <LineId Id="263" Count="1" />
      <LineId Id="205" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="253" Count="1" />
      <LineId Id="245" Count="1" />
      <LineId Id="223" Count="0" />
      <LineId Id="255" Count="1" />
      <LineId Id="224" Count="9" />
      <LineId Id="235" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.StoredProcedure">
      <LineId Id="279" Count="5" />
      <LineId Id="355" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="365" Count="1" />
      <LineId Id="298" Count="1" />
      <LineId Id="306" Count="0" />
      <LineId Id="369" Count="1" />
      <LineId Id="307" Count="1" />
      <LineId Id="348" Count="1" />
      <LineId Id="316" Count="2" />
      <LineId Id="350" Count="1" />
      <LineId Id="325" Count="0" />
      <LineId Id="338" Count="2" />
      <LineId Id="367" Count="1" />
      <LineId Id="326" Count="9" />
      <LineId Id="337" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SQL.TimeOut.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>